{"version":3,"sources":["logo.svg","data/dishes.js","components/Step1.jsx","components/Step2.jsx","components/Step3.jsx","components/Step4.jsx","components/Steppers.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","mealCategory","numberOfPeople","Step1","props","handleChange","event","type","setState","target","value","this","onUpdateStep1","state","Grid","container","spacing","className","item","md","sm","xs","FormControl","margin","style","width","InputLabel","htmlFor","Select","defaultValue","listSelected","onChange","map","MenuItem","key","Component","Step2","restaurant","onUpdateStep2","getRestaurantsByMealCategory","mealSelected","console","log","restaurantsTemp","dishes","availableMeals","indexOf","push","toast","configure","autoClose","draggable","limit","numberOfServings","dish","getDish","restaurantSelected","name","addItem","items","listDish","filter","onUpdateStep3","warning","marginLeft","Button","marginTop","variant","color","onClick","Table","TableHead","TableRow","TableCell","TableBody","row","index","component","scope","Step4","border","steps","Steppers","handleBack","activeStep","validator","total","handleNext","result","handleReset","checkStep","Stepper","alternativeLabel","step","Step","StepLabel","length","Typography","align","disabled","Step3","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6d5d1ca7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","\r\nexport const data = {\r\n    \"dishes\": [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"Chicken Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"name\": \"Ham Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"name\": \"Cheese Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"name\": \"Fries\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        \"name\": \"Egg Muffin\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"Burrito\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"Tacos\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 8,\r\n        \"name\": \"Quesadilla\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 9,\r\n        \"name\": \"Steak\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 10,\r\n        \"name\": \"Yakitori\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 11,\r\n        \"name\": \"Nankotsu\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 12,\r\n        \"name\": \"Piman\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 13,\r\n        \"name\": \"Vegan Bento\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\"]\r\n      },\r\n      {\r\n        \"id\": 14,\r\n        \"name\": \"Coleslaw Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 15,\r\n        \"name\": \"Grilled Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n      },\r\n      {\r\n        \"id\": 16,\r\n        \"name\": \"Veg. Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 17,\r\n        \"name\": \"Fruit Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 18,\r\n        \"name\": \"Corn Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 19,\r\n        \"name\": \"Tomato Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 20,\r\n        \"name\": \"Minestrone Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 21,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 22,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 23,\r\n        \"name\": \"Hawaiian Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 24,\r\n        \"name\": \"Seafood Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 25,\r\n        \"name\": \"Deep Dish Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 26,\r\n        \"name\": \"Chow Mein\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 27,\r\n        \"name\": \"Mapo Tofu\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 28,\r\n        \"name\": \"Kung Pao\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 29,\r\n        \"name\": \"Wontons\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 30,\r\n        \"name\": \"Garlic Bread\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 31,\r\n        \"name\": \"Ravioli\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 32,\r\n        \"name\": \"Rigatoni Spaghetti\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      },\r\n      {\r\n        \"id\": 33,\r\n        \"name\": \"Fettucine Pasta\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n      }\r\n    ]\r\n  }","import React, { Component } from \"react\";\r\nimport { data } from \"../data/dishes\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst mealCategory = [\"breakfast\", \"dinner\", \"lunch\"];\r\nconst numberOfPeople = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nclass Step1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {};\r\n  }\r\n  handleChange = (event, type) => {\r\n    if (type === \"meal\") {\r\n      this.setState(\r\n        {\r\n          mealCategory: event.target.value,\r\n        },\r\n        function () {\r\n          this.props.onUpdateStep1(this.state);\r\n        }\r\n      );\r\n    }\r\n    if (type === \"numberOfPeople\") {\r\n      this.setState(\r\n        {\r\n          numberOfPeople: event.target.value,\r\n        },\r\n        function () {\r\n          this.props.onUpdateStep1(this.state);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n            <br/>\r\n        </h1>\r\n        <Grid container spacing={1} className=\"App\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"ml-16\">\r\n            <FormControl margin=\"dense\" style={{ width: \"300px\" }}>\r\n              <InputLabel htmlFor=\"my-input\">Please Select a Meal</InputLabel>\r\n              <Select \r\n              defaultValue={this.props.listSelected.mealCategory}\r\n              onChange={(event) => this.handleChange(event, \"meal\")}>\r\n                {mealCategory.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item} value={item}>\r\n                      {item}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={6} xs={12} className=\"ml-16\">\r\n            <FormControl margin=\"dense\" style={{ width: \"300px\" }}>\r\n              <InputLabel htmlFor=\"my-input\">\r\n                Please Select number of People\r\n              </InputLabel>\r\n              <Select\r\n              defaultValue={this.props.listSelected.numberOfPeople}\r\n                onChange={(event) => this.handleChange(event, \"numberOfPeople\")}\r\n              >\r\n                {numberOfPeople.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item} value={item}>\r\n                      {item}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Step1;\r\n","import React, { Component } from \"react\";\r\nimport { data } from \"../data/dishes\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nclass Step2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        restaurant: event.target.value,\r\n    },\r\n    function () {\r\n      this.props.onUpdateStep2(this.state);\r\n    });\r\n  };\r\n  getRestaurantsByMealCategory = () => {\r\n    var  mealSelected = this.props.mealCategory;\r\n    console.log(mealSelected)\r\n    var restaurantsTemp = [];\r\n    data.dishes.map((value) => {\r\n      var index1 = value.availableMeals.indexOf(mealSelected);\r\n      if (index1 !== -1) {\r\n        restaurantsTemp.push(value.restaurant);\r\n      }\r\n    });\r\n    var restaurant = [];\r\n    restaurantsTemp.map((value) => {\r\n      var index2 = restaurant.indexOf(value);\r\n      if (index2 === -1) {\r\n        restaurant.push(value);\r\n      }\r\n    });\r\n    return restaurant;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n            <br/>\r\n        </h1>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={3} sm={6} xs={12} className=\"ml-16 App\">\r\n            <FormControl margin=\"dense\" style={{ width: \"300px\" }}>\r\n              <InputLabel htmlFor=\"my-input\">\r\n                Please Select Restaurants\r\n              </InputLabel>\r\n              <Select\r\n               defaultValue={this.props.restaurant} \r\n               onChange={(event) => this.handleChange(event)}>\r\n                {this.getRestaurantsByMealCategory().map((item) => {\r\n                  return (\r\n                    <MenuItem key={item} value={item}>\r\n                      {item}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Step2;\r\n","import React, { Component } from \"react\";\r\nimport { data } from \"../data/dishes\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nconst numberOfServings = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nclass Step1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      listDish: [],\r\n      numberOfServings: 1,\r\n    };\r\n  }\r\n  handleChange = (event, type) => {\r\n    if (type === \"dish\") {\r\n      this.setState(\r\n        {\r\n          dish: event.target.value,\r\n        }\r\n      );\r\n    }\r\n    if (type === \"numberOfServings\") {\r\n      this.setState(\r\n        {\r\n          numberOfServings: event.target.value,\r\n        }\r\n      );\r\n    }\r\n  };\r\n  getDish = () => {\r\n    var mealSelected = this.props.mealCategory;\r\n    var restaurantSelected = this.props.restaurant;\r\n    console.log(this.props);\r\n    var restaurantsTemp = [];\r\n    data.dishes.map((value) => {\r\n      if (value.restaurant === restaurantSelected) restaurantsTemp.push(value);\r\n    });\r\n    var dish = [];\r\n    restaurantsTemp.map((value) => {\r\n      var index = value.availableMeals.indexOf(mealSelected);\r\n      if (index !== -1) {\r\n        dish.push(value.name);\r\n      }\r\n    });\r\n    return dish;\r\n  };\r\n  componentWillMount() {\r\n    var listDish = this.getDish();\r\n    this.setState({\r\n      listDish: listDish,\r\n    });\r\n  }\r\n  addItem = () => {\r\n    var { items, listDish, dish } = this.state;\r\n    if (dish) {\r\n      if (items == null) {\r\n        items = [];\r\n      }\r\n      var item = {};\r\n      item.dish = this.state.dish;\r\n      item.numberOfServings = this.state.numberOfServings;\r\n      items.push(item);\r\n      var listDish = listDish.filter((item) => item !== dish);\r\n      this.setState({\r\n        items: items,\r\n        listDish: listDish,\r\n        dish:null\r\n      });\r\n      this.props.onUpdateStep3(items);\r\n      console.log(items);\r\n    }\r\n    else{\r\n        toast.warning(\"Please select a Dish !\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { items, listDish } = this.state;\r\n    console.log(this.props)\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1 style={{ marginLeft: \"70%\" }}>List</h1>\r\n        </div>\r\n        <Grid container spacing={2} className=\"App\">\r\n          <Grid item md={3} sm={6} xs={12}>\r\n            <FormControl margin=\"dense\" style={{ width: \"300px\" }}>\r\n              <InputLabel htmlFor=\"my-input\">Please Select a Dish</InputLabel>\r\n              <Select \r\n                onChange={(event) => this.handleChange(event, \"dish\")}>\r\n                {listDish.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item} value={item}>\r\n                      {item}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={6} xs={12}>\r\n            <FormControl margin=\"dense\" style={{ width: \"300px\" }}>\r\n              <InputLabel htmlFor=\"my-input\">\r\n                Please enter no. of servings\r\n              </InputLabel>\r\n              <Select\r\n                defaultValue={1}\r\n                onChange={(event) =>\r\n                  this.handleChange(event, \"numberOfServings\")\r\n                }\r\n              >\r\n                {numberOfServings.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item} value={item}>\r\n                      {item}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <Button\r\n              style={{ marginTop: \"12px\", marginLeft: \"20px\" }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.addItem}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n          <Grid item md={6} sm={12} xs={12}>\r\n            <Table\r\n              className=\"crud-table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: \"300px\" }}>Dishes </TableCell>\r\n                  <TableCell>Number Of Servings</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items.map((row, index) => (\r\n                  <TableRow key={row.dish}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.dish}\r\n                    </TableCell>\r\n                    <TableCell>{row.numberOfServings}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Step1;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nclass Step4 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        listSelected:[]\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    var listSelected = this.props.listSelected;\r\n    this.setState({\r\n      listSelected: listSelected,\r\n    });\r\n  }\r\n  render() {\r\n    var { listSelected } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Over view</h1>\r\n\r\n        <Grid container spacing={2} className=\"App\">\r\n          <Grid item md={12} sm={12} xs={12}>\r\n            <Table\r\n                border={0}\r\n              className=\"crud-table\"\r\n              style={{\r\n                //   whiteSpace: \"pre\",\r\n                width: \"50%\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    Meal\r\n                  </TableCell>\r\n                  <TableCell>{listSelected.mealCategory}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    Number Of People\r\n                  </TableCell>\r\n                  <TableCell> {listSelected.numberOfPeople}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    Restaurant\r\n                  </TableCell>\r\n                  <TableCell>{listSelected.restaurant}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    Dishes\r\n                  </TableCell>\r\n                  <TableCell >\r\n                    {listSelected.items.map((row, index) => (\r\n                      <TableRow key={row.dish} style={{border: '2px solid #3f51b5'}}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.dish}\r\n                        </TableCell>\r\n                        <TableCell>{row.numberOfServings}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Step4;\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Step1 from \"./Step1\";\r\nimport Step2 from \"./Step2\";\r\nimport Step3 from \"./Step3\";\r\nimport Step4 from \"./Step4\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nconst steps = [\"Step 1\", \"Step 2\", \"Step 3\", \"Review\"];\r\nclass Steppers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mealCategory: \"\",\r\n      numberOfPeople: \"\",\r\n      restaurant: \"\",\r\n      activeStep: 0,\r\n      items: [],\r\n    };\r\n  }\r\n  handleBack = () => {\r\n    var activeStep = this.state.activeStep - 1;\r\n    this.setState({\r\n      activeStep: activeStep,\r\n    });\r\n  };\r\n  validator = (activeStep) => {\r\n    if (activeStep === 1) {\r\n      if (!this.state.mealCategory) {\r\n        toast.warning(\"Please select Meal Category!\");\r\n        return 0;\r\n      }\r\n    }\r\n    if (activeStep === 1) {\r\n      if (!this.state.numberOfPeople) {\r\n        toast.warning(\"Please select Number Of People !\");\r\n        return 0;\r\n      }\r\n    }\r\n    if (activeStep === 2) {\r\n      if (this.state.restaurant == \"\") {\r\n        toast.warning(\"Please select Restaurant !\");\r\n        return 0;\r\n      }\r\n    }\r\n    if (activeStep === 3) {\r\n      var {items} = this.state\r\n      console.log(items)      \r\n      if (items == \"\"){\r\n        items = []\r\n      }\r\n      console.log(items)      \r\n      var total = 0;\r\n      items.map((value) => {\r\n        total += value.numberOfServings\r\n      })\r\n      console.log(total)\r\n      if (this.state.numberOfPeople > total ) {\r\n        toast.warning(\"Please add Dish or Servings!\");\r\n        return 0\r\n      }\r\n      return 1\r\n    }\r\n    return 1;\r\n  };\r\n  handleNext = () => {\r\n    console.log(this.state)\r\n    var activeStep = this.state.activeStep + 1;\r\n    var result = this.validator(activeStep);\r\n    console.log(result);\r\n    if (result === 1) {\r\n      this.setState({\r\n        activeStep: activeStep,\r\n      });\r\n    }\r\n  };\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n      mealCategory: \"\",\r\n      numberOfPeople: \"\",\r\n      restaurant: \"\",\r\n      activeStep: 0,\r\n      items: [],\r\n    });\r\n  };\r\n  checkStep = () => {\r\n    var { activeStep } = this.state;\r\n    switch (activeStep) {\r\n      case 0:\r\n        return \"Select meal category and number of people\";\r\n      case 1:\r\n        return \"Select Restaurants\";\r\n      case 2:\r\n        return \"Select Dish and Servings\";\r\n      default:\r\n        return \"Over view\";\r\n    }\r\n  };\r\n\r\n  onUpdateStep1 = (data) => {\r\n    this.setState(\r\n      {\r\n        mealCategory: data.mealCategory,\r\n        numberOfPeople: data.numberOfPeople,\r\n      },\r\n      function () {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  onUpdateStep2 = (data) => {\r\n    this.setState(\r\n      {\r\n        restaurant: data.restaurant,\r\n      },\r\n      function () {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n  onUpdateStep3 = (data) => {\r\n    console.log(data);\r\n    this.setState(\r\n      {\r\n        items: data,\r\n      },\r\n      function () {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    var { activeStep, mealCategory, restaurant } = this.state;\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"Steppers\">\r\n          <Stepper activeStep={activeStep} alternativeLabel>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <div>\r\n            {activeStep === steps.length ? (\r\n              <div>\r\n                <Button onClick={this.handleReset} color=\"default\">\r\n                  Reset\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h1>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    variant=\"h5\"\r\n                    color=\"primary\"\r\n\r\n                    //   className={classes.instructions}\r\n                  >\r\n                    {this.checkStep(activeStep)}\r\n                  </Typography>\r\n                </h1>\r\n\r\n                <div>\r\n                  <Button disabled={activeStep === 0} onClick={this.handleBack}>\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleNext}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Submit\" : \"Next\"}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"container\">\r\n          {activeStep === 0 ? <Step1 onUpdateStep1={this.onUpdateStep1}  listSelected={this.state} /> : \"\"}\r\n          {activeStep === 1 ? (\r\n            <Step2\r\n              onUpdateStep2={this.onUpdateStep2}\r\n              mealCategory={mealCategory}\r\n              restaurant={restaurant}\r\n              listSelected={this.state}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {activeStep === 2 ? (\r\n            <Step3\r\n              onUpdateStep3={this.onUpdateStep3}\r\n              mealCategory={mealCategory}\r\n              restaurant={restaurant}\r\n              listSelected={this.state}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {activeStep === 3 ? <Step4 listSelected={this.state} /> : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Steppers;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Steppers from \"./components/Steppers\";\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"text-center \">\r\n          <div>\r\n            <h1 className=\"text-header header\">\r\n              Restaurants Management Software\r\n            </h1>\r\n          </div>\r\n          <Steppers />\r\n        </div>\r\n        <div>\r\n          <h1 className=\"text-header footer\">\r\n            <div className= \"footer_icon\">\r\n            <CopyrightIcon />\r\n            </div>\r\n            Coppyright By Hoangtph \r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}